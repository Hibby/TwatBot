h1. TwatBot

An IRC bot to post to Twitter.

h3. Features
* Test update 2
* Ability to ban users.
* Admin only commands
* Can't quote yourself
* Authenticates with the Twitter API via oAuth.
* Can play "A Dragon Eats You" on #futaba@rizon
* Can join multiple channels on one network

h3. Requirements

* Python 2.x (Python 2.7 was used in creation)
* A Twitter account to post tweets to.
* The python-twitter module.


h1. Running

h3. Place the file
* Add a 'keys' file in the same directory as twatbot.py and fill it with your Twitter oAuth key.
* Then simply start the bot with 'python twatboy.py &' which will fork the bot.
* Or you could run it in a 'screen' session.


h1. Using the Bot

h3. Commands
* Use '^^' to post the preceding line to Twitter
* Stores the last 10 comments from each channel, use '^^ n' to post the nth quote to Twitter.
* Using the command '^help' will display help.
* '^cmds' to view all available commands
* '^ban' to ban someone or view the current bans. Banning will post to Twitter  who has been banned
* Use '^last' to see that last comment posted to Twitter.
* '^last userame' will display the last post from a specific Twitter user
* '^chans' will display the channels that the bot is connected to.
* '^join|part' will join/part a specified channel

h1. Todo

h3. Features
* Implement scrollback for '^^ n'. Use the current chans dictionary to map to an array. Treat the array like a queue (LILO)
* Have it show the scrollback for reference
* Delete the last post if admin
* Add/remove admins
* Have a list of plugins

h3. Code
* Organise all functionality into plugins with a list of triggers
* Move a socket connection to a class so that multiple networks can be joined by instantiating an object for each network
* Eliminate bugs
